//
// Imports
//

import("field.bf");
import("fieldhook.msg");

//
// Script-level variable definitions
//

int variable136;
// My variables
int variable20;
int variable21;
int variable22;
int pageOneMask;
int pageTwoMask;
int numSelectionsRemoved;
int isHoliday;

//
// Procedure declarations
//

void generate_hangout_menu()
{
    // Variables that store the location of the messages and whatnot
    int localVariable54 = HANG_OUT_MSG;
    int localVariable55 = HANG_OUT_SEL;

    // Get the day from 0-6, Sunday-Saturday
    int dayOfWeek;
    dayOfWeek = GET_DAY_OF_WEEK();
    // Get the time of day from 0-5, early morning to evening
    int timeOfDay;
    timeOfDay = GET_TIME_OF_DAY();
    //Check if it is a holiday
    check_if_holiday();

    // Variable to keep track of the page we're on
    int localVariable120 = 0;

    // Set all of the message variables based on whether the link is ready to level up
    SET_MSG_VAR(0, 621 + CHECK_IF_SL_LVLUP(31), 6);
    SET_MSG_VAR(1, 621 + (CHECK_IF_SL_LVLUP(21) || CHECK_IF_SL_LVLUP(22)), 6);
    SET_MSG_VAR(2, 621 + (CHECK_IF_SL_LVLUP(11) || CHECK_IF_SL_LVLUP(12)), 6);
   
    // If you try to check if Ayane will level up when Yumi is the S.link for the save the game crashes
    if (GET_SL_LEVEL(27) > 0 || GET_SL_LEVEL(28) > 0 || (GET_SL_LEVEL(25) == 0 && GET_SL_LEVEL(26) == 0 && GET_SL_LEVEL(27) == 0 && GET_SL_LEVEL(28) == 0)) {
        SET_MSG_VAR(3, 621 + (CHECK_IF_SL_LVLUP(27) || CHECK_IF_SL_LVLUP(28)), 6);
    }

    SET_MSG_VAR(4, 621 + CHECK_IF_SL_LVLUP(29), 6);
    SET_MSG_VAR(5, 621 + CHECK_IF_SL_LVLUP(19), 6);
    SET_MSG_VAR(6, 621 + CHECK_IF_SL_LVLUP(10), 6);
    SET_MSG_VAR(7, 621 + (CHECK_IF_SL_LVLUP(33) || CHECK_IF_SL_LVLUP(34)), 6);
    SET_MSG_VAR(8, 621 + CHECK_IF_SL_LVLUP(18), 6);
    SET_MSG_VAR(9, 621 + (CHECK_IF_SL_LVLUP(14) || CHECK_IF_SL_LVLUP(15)), 6);
    SET_MSG_VAR(10, 621 + (CHECK_IF_SL_LVLUP(3) || CHECK_IF_SL_LVLUP(4)), 6);
    SET_MSG_VAR(11, 621 + CHECK_IF_SL_LVLUP(9), 6);
    SET_MSG_VAR(12, 621 + CHECK_IF_SL_LVLUP(23), 6);
    // Kou is 16, Daisuke 17
    if(GET_SL_LEVEL(16) > 0 ){
            SET_MSG_VAR(13, 621 + CHECK_IF_SL_LVLUP(16), 6);
    } else {
            SET_MSG_VAR(13, 621 + CHECK_IF_SL_LVLUP(17), 6);
    }
    SET_MSG_VAR(14, 621 + CHECK_IF_SL_LVLUP(7), 6);
    SET_MSG_VAR(15, 621 + (CHECK_IF_SL_LVLUP(5) || CHECK_IF_SL_LVLUP(6)), 6);

    // If you try to check if Yumi will level up when Ayane is the S.link for the save the game crashes
    if (GET_SL_LEVEL(25) > 0 || GET_SL_LEVEL(26) > 0 || (GET_SL_LEVEL(25) == 0 && GET_SL_LEVEL(26) == 0 && GET_SL_LEVEL(27) == 0 && GET_SL_LEVEL(28) == 0)) {
        SET_MSG_VAR(3, 621 + (CHECK_IF_SL_LVLUP(25) || CHECK_IF_SL_LVLUP(26)), 6);
    }


    // Set message variables for the level of each s link
    SET_MSG_VAR(16, GET_SL_LEVEL(31), 0);
    // Use whichever level is bigger for those that have two possible
    if (GET_SL_LEVEL(21) >= GET_SL_LEVEL(22))
    {
        SET_MSG_VAR(17, GET_SL_LEVEL(21), 0);
    }
    else
    {
        SET_MSG_VAR(17, GET_SL_LEVEL(22), 0);
    }

    if (GET_SL_LEVEL(11) >= GET_SL_LEVEL(12))
    {
        SET_MSG_VAR(18, GET_SL_LEVEL(11), 0);
    }
    else
    {
        SET_MSG_VAR(18, GET_SL_LEVEL(12), 0);
    }

    if (GET_SL_LEVEL(27) > 0 || GET_SL_LEVEL(28) > 0 || (GET_SL_LEVEL(25) == 0 && GET_SL_LEVEL(26) == 0 && GET_SL_LEVEL(27) == 0 && GET_SL_LEVEL(28) == 0))
	{
		if (GET_SL_LEVEL(27) >= GET_SL_LEVEL(28))
		{
			SET_MSG_VAR(19, GET_SL_LEVEL(27), 0);
		}
		else
		{
			SET_MSG_VAR(19, GET_SL_LEVEL(28), 0);
		}
	}

    SET_MSG_VAR(20, GET_SL_LEVEL(29), 0);
    SET_MSG_VAR(21, GET_SL_LEVEL(19), 0);
    SET_MSG_VAR(22, GET_SL_LEVEL(10), 0);

    if (GET_SL_LEVEL(33) >= GET_SL_LEVEL(34))
    {
        SET_MSG_VAR(23, GET_SL_LEVEL(33), 0);
    }
    else
    {
        SET_MSG_VAR(23, GET_SL_LEVEL(34), 0);
    }
    SET_MSG_VAR(24, GET_SL_LEVEL(18), 0);

    if (GET_SL_LEVEL(14) >= GET_SL_LEVEL(15))
    {
        SET_MSG_VAR(25, GET_SL_LEVEL(14), 0);
    }
    else
    {
        SET_MSG_VAR(25, GET_SL_LEVEL(15), 0);
    }

    if (GET_SL_LEVEL(3) >= GET_SL_LEVEL(4))
    {
        SET_MSG_VAR(26, GET_SL_LEVEL(3), 0);
    }
    else
    {
        SET_MSG_VAR(26, GET_SL_LEVEL(4), 0);
    }
    SET_MSG_VAR(27, GET_SL_LEVEL(9), 0);
    SET_MSG_VAR(28, GET_SL_LEVEL(23), 0);
    
    if(GET_SL_LEVEL(16) > 0) {
        SET_MSG_VAR(29, GET_SL_LEVEL(16), 0);
    } else {
        SET_MSG_VAR(29, GET_SL_LEVEL(17), 0);
    }

    SET_MSG_VAR(30, GET_SL_LEVEL(7), 0);

    if (GET_SL_LEVEL(5) >= GET_SL_LEVEL(6))
    {
        SET_MSG_VAR(31, GET_SL_LEVEL(5), 0);
    }
    else
    {
        SET_MSG_VAR(31, GET_SL_LEVEL(6), 0);
    }

   if (GET_SL_LEVEL(25) > 0 || GET_SL_LEVEL(26) > 0 || (GET_SL_LEVEL(25) == 0 && GET_SL_LEVEL(26) == 0 && GET_SL_LEVEL(27) == 0 && GET_SL_LEVEL(28) == 0))
	{
		if (GET_SL_LEVEL(25) >= GET_SL_LEVEL(26))
		{
			SET_MSG_VAR(19, GET_SL_LEVEL(25), 0);
		}
		else
		{
			SET_MSG_VAR(19, GET_SL_LEVEL(26), 0);
		}
	}

    SET_SEL_CHOICE_KEYBIND(14, 19);
    int localVariable56 = ADV_SEL(localVariable54, localVariable55, pageOneMask);

    // Field major and minor to make sure you can't tp to the current location
    int fieldMajor = GET_FIELD_MAJOR();
    int fieldMinor = GET_FIELD_MINOR();

_choiceLoop:
    // Cancel or see more wasn't chosen
    if (localVariable56 < 18)
    {
        // Checks whether the selection should be canceled (for when leaving home for the day)
        int cancelSel = 0;

        // Show confirmation for leaving home for the day if applicable
        if(timeOfDay != 5 && fieldMajor == 7 && (fieldMinor == 2 || fieldMinor == 3)) {
            OPEN_MSG_WIN();
            MSG(EXIT_MYHOME_OK);
            SET_SEL_CHOICE_KEYBIND(14, 1);
            cancelSel = SEL(YESNO_SEL);
        }

        if(cancelSel == 0) {
            // Teleport the player to the desired location depending on who they chose
            switch (localVariable56)
            {
            // Adachi
            case 0:
                // South Shopping District in the night
                if (timeOfDay == 5)
                {
                    if (fieldMajor == 8 && fieldMinor == 2)
                    {
                        OPEN_MSG_WIN();
                        MSG(ADACHI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 2, 8, 0);
                    }
                    // Junes in the day
                }
                else
                {
                    if (fieldMajor == 9 && fieldMinor == 4)
                    {
                        OPEN_MSG_WIN();
                        MSG(ADACHI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(9, 4, 0, 0);
                    }
                }
                break;
            // Ai - Learning Building 1F
            case 1:
                if (fieldMajor == 6 && fieldMinor == 1)
                {
                    OPEN_MSG_WIN();
                    MSG(AI_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 1, 5, 0);
                }
                break;
            // Ayane - Learning Building 2F
            case 2:
                if (fieldMajor == 6 && fieldMinor == 2 && (GET_SL_LEVEL(27) > 0 || GET_SL_LEVEL(28) > 0))
                {
                    OPEN_MSG_WIN();
                    MSG(AYANE_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else if (GET_SL_LEVEL(27) > 0 || GET_SL_LEVEL(28) > 0)
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 2, 0, 0);
                }
                else if (fieldMajor == 6 && fieldMinor == 4 && (GET_SL_LEVEL(27) == 0 && GET_SL_LEVEL(28) == 0))
                {
                    OPEN_MSG_WIN();
                    MSG(AYANE_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 4, 4, 0);
                }
                break;

            // Chie
            case 3:
                // South Shopping District on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 8 && fieldMinor == 2)
                    {
                        OPEN_MSG_WIN();
                        MSG(CHIE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 2, 2, 0);
                    }
                    // Roof on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 14)
                    {
                        OPEN_MSG_WIN();
                        MSG(CHIE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 14, 1, 0);
                    }
                }
                break;
            // Daisuke - Learning Building 2F
            case 4:
                if (fieldMajor == 6 && fieldMinor == 2 && GET_SL_LEVEL(17) > 0)
                {
                    OPEN_MSG_WIN();
                    MSG(DAISUKE_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else if (GET_SL_LEVEL(17) > 0)
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 2, 4, 0);
                }
                else if (fieldMajor == 6 && fieldMinor == 1 && GET_SL_LEVEL(17) == 0)
                {
                    OPEN_MSG_WIN();
                    MSG(DAISUKE_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 1, 2, 0);
                }
                break;

            // Eri - South Shopping District
            case 5:
                if (fieldMajor == 8 && fieldMinor == 2)
                {
                    OPEN_MSG_WIN();
                    MSG(BUS_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(8, 2, 6, 0);
                }
                break;
            // Hisano - Samegawa Riverbank
            case 6:
                if (fieldMajor == 10 && fieldMinor == 2)
                {
                    OPEN_MSG_WIN();
                    MSG(HISANO_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(10, 2, 0, 0);
                }
                break;
            // Kanji
            case 7:
                // North Shopping District on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 8 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(KANJI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 1, 5, 0);
                    }
                    // Practice Building 1F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 4)
                    {
                        OPEN_MSG_WIN();
                        MSG(KANJI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 4, 5, 0);
                    }
                }
                break;
            // Kou - Learning Building 2F
            case 8:
                if (fieldMajor == 6 && fieldMinor == 2 && GET_SL_LEVEL(16) > 0)
                {
                    OPEN_MSG_WIN();
                    MSG(KOU_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else if (GET_SL_LEVEL(16) > 0)
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 2, 4, 0);
                }
                else if (fieldMajor == 6 && fieldMinor == 1 && GET_SL_LEVEL(16) == 0)
                {
                    OPEN_MSG_WIN();
                    MSG(KOU_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 1, 2, 0);
                }
                break;

            // Marie - South Shopping District
            case 9:
                if (fieldMajor == 8 && fieldMinor == 2)
                {
                    OPEN_MSG_WIN();
                    MSG(MARIE_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(8, 2, 4, 0);
                }
                break;
            // Naoki
            case 10:
                // North Shopping District on Sundays and whenever the s link level is not 0
                if (isHoliday == 1 || GET_SL_LEVEL(18) > 0)
                {
                    if (fieldMajor == 8 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(NAOKI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 1, 5, 0);
                    }
                    // Learning Building 1F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(NAOKI_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 1, 6, 0);
                    }
                }
                break;
            // Naoto
            case 11:
                // Samegawa Flood Plain on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 10 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(NAOTO_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(10, 1, 2, 0);
                    }
                    // Learning Building 1F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(NAOTO_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 1, 4, 0);
                    }
                }
                break;
            // Rise
            case 12:
                // South Shopping District on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 8 && fieldMinor == 2)
                    {
                        OPEN_MSG_WIN();
                        MSG(RISE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 2, 2, 0);
                    }
                    // Learning Building 1F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(RISE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 1, 1, 0);
                    }
                }
                break;
            // Sayoko - South Shopping District
            case 13:
                if (fieldMajor == 8 && fieldMinor == 2)
                {
                    OPEN_MSG_WIN();
                    MSG(BUS_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(8, 2, 6, 0);
                }
                break;
            // Shu - South Shopping District
            case 14:
                if (fieldMajor == 8 && fieldMinor == 2)
                {
                    OPEN_MSG_WIN();
                    MSG(BUS_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(8, 2, 6, 0);
                }
                break;
            // Yoskue
            case 15:
                // Junes on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 9 && fieldMinor == 4)
                    {
                        OPEN_MSG_WIN();
                        MSG(YOSUKE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(9, 4, 0, 0);
                    }
                    // Learning Building 2F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 2)
                    {
                        OPEN_MSG_WIN();
                        MSG(YOSUKE_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 2, 0, 0);
                    }
                }
                break;
            // Yukiko
            case 16:
                // South Shopping District on Sundays
                if (isHoliday == 1)
                {
                    if (fieldMajor == 8 && fieldMinor == 2)
                    {
                        OPEN_MSG_WIN();
                        MSG(YUKIKO_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(8, 2, 7, 0);
                    }
                    // Learning Building 1F on Weekdays
                }
                else
                {
                    if (fieldMajor == 6 && fieldMinor == 1)
                    {
                        OPEN_MSG_WIN();
                        MSG(YUKIKO_ALREADY_HERE);
                        CLOSE_MSG_WIN();
                    }
                    else
                    {
                        FADE(1, 5);
                        FADE_SYNC();
                        CALL_FIELD(6, 1, 7, 0);
                    }
                }
                break;
            // Yumi - Learning Building 2F
            case 17:
                if (fieldMajor == 6 && fieldMinor == 2 && (GET_SL_LEVEL(25) > 0 || GET_SL_LEVEL(26) > 0))
                {
                    OPEN_MSG_WIN();
                    MSG(YUMI_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else if (GET_SL_LEVEL(25) > 0 || GET_SL_LEVEL(26) > 0)
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 2, 0, 0);
                }
                else if (fieldMajor == 6 && fieldMinor == 4 && (GET_SL_LEVEL(25) == 0 && GET_SL_LEVEL(26) == 0))
                {
                    OPEN_MSG_WIN();
                    MSG(YUMI_ALREADY_HERE);
                    CLOSE_MSG_WIN();
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    CALL_FIELD(6, 4, 1, 0);
                }
                break;
            }
        }
        // See more was chosen
    }
    else if (localVariable56 == 18)
    {
        // Generate another menu
        SET_SEL_CHOICE_KEYBIND(14, 19);
        // If you're on page one go to two and vice versa
        if (localVariable120 == 0)
        {
            localVariable120 = 1;
            localVariable56 = ADV_SEL(localVariable54, localVariable55, pageTwoMask);
        }
        else
        {
            localVariable120 = 0;
            localVariable56 = ADV_SEL(localVariable54, localVariable55, pageOneMask);
        }
        // Go back to the choices for round rwo (or more)
        goto _choiceLoop;
    }
}

void generate_selection_mask()
{
    pageOneMask = 0; // First list
    // All characters removed (subtracting from this adds them back to the second list)
    pageTwoMask = 131071; // Second list

    // Count how many people were removed from the list so I can decide whether to make a second page
    numSelectionsRemoved = 0;

    // A local variable for each slink to track whether they've been removed or not (I'm sure this could be done better but idk how)
    // 1 means available (not removed) 0 means not available (removed)
    int adachiState = 1;
    int aiState = 1;
    int chieState = 1;
    int ayaneState = 1;
    int daisukeState = 1;
    int eriState = 1;
    int hisanoState = 1;
    int kanjiState = 1;
    int marieState = 1;
    int naokiState = 1;
    int naotoState = 1;
    int riseState = 1;
    int sayokoState = 1;
    int shuState = 1;
    int kouState = 1;
    int yosukeState = 1;
    int yukikoState = 1;
    int yumiState = 1;
    int localVariable116 = 1;

    int timeOfDay;
    timeOfDay = GET_TIME_OF_DAY();

    // Choose which people to exclude based on the day
    // Check Adachi
    if (BIT_CHK(0 + 0x0400 + 692) == 0 || GET_SL_LEVEL(31) >= 6)
    {
        pageOneMask = pageOneMask + 1;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        adachiState = 0;
    }

    // Ai isn't available Monday, Tuesday, Saturday, Sunday and Holidays
    if (BIT_CHK(0 + 0x0400 + 468) == 0 || GET_SL_LEVEL(21) >= 10 || GET_SL_LEVEL(22) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 2;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        aiState = 0;
    }
    // Ayane isn't available Wednesday, Friday, Saturday, Sunday and Holiday
    if (BIT_CHK(0 + 0x0400 + 475) == 0 || GET_SL_LEVEL(27) >= 10 || GET_SL_LEVEL(28) >= 10 || GET_SL_LEVEL(25) > 0 || GET_SL_LEVEL(26) > 0 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 4;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        ayaneState = 0;
    }
    // Chie isn't available Friday and Sunday
    if (BIT_CHK(0 + 0x0400 + 459) == 0 || GET_SL_LEVEL(11) >= 10 || GET_SL_LEVEL(12) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 8;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        chieState = 0;
    }
    // Daisuke isn't available Monday, Wednesday, Friday, Sunday and Holidays
    if (BIT_CHK(0 + 0x0400 + 463) == 0 || GET_SL_LEVEL(17) >= 10 || GET_SL_LEVEL(16) > 0 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 16;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        daisukeState = 0;
    }
    // Eri isn't available Tuesday, Wednesday, Thursday, Sunday and Holidays
    if (BIT_CHK(0 + 0x0400 + 1641) == 0 || BIT_CHK(0 + 0x0400 + 476) == 0 || GET_SL_LEVEL(29) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 32;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        eriState = 0;
    }
    // Hisano is only available on Sundays and Holidays
    if (BIT_CHK(0 + 0x0400 + 466) == 0 || GET_SL_LEVEL(19) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 64;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        hisanoState = 0;
    }
    // Kanji isn't available Monday, Tuesday and Friday
    if (BIT_CHK(0 + 0x0400 + 457) == 0 || GET_SL_LEVEL(10) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 128;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        kanjiState = 0;
    }
    // Kou isn't available Monday, Wednesday, Friday, Sunday and Holidays
    if (BIT_CHK(0 + 0x0400 + 463) == 0 || GET_SL_LEVEL(0x10) >= 10 || GET_SL_LEVEL(17) > 0 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 256;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        kouState = 0;
    }
    // Marie isn't available Monday, Tuesday, Thursday and Friday
    if (BIT_CHK(0 + 0x0400 + 712) == 0 || GET_SL_LEVEL(33) >= 10 || GET_SL_LEVEL(34) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 512;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        marieState = 0;
    }
    // Naoki isn't available Friday, Saturday and Sunday
    if (BIT_CHK(0 + 0x0400 + 465) == 0 || GET_SL_LEVEL(18) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 1024;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        naokiState = 0;
    }
    // Naoto isn't available Thursday and Friday
    if (BIT_CHK(0 + 0x0400 + 462) == 0 || GET_SL_LEVEL(14) >= 10 || GET_SL_LEVEL(15) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 2048;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        naotoState = 0;
    }
    // Rise isn't available Monday, Tuesday, Wednesday and Thursday
    if (BIT_CHK(0 + 0x0400 + 436) == 0 || GET_SL_LEVEL(3) >= 10 || GET_SL_LEVEL(4) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 4096;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        riseState = 0;
    }
    // Sayoko isn't available Monday, Tuesday, Saturday, Sunday, Holidays, and in the day
    if (BIT_CHK(0 + 0x0400 + 456) == 0 || BIT_CHK(0 + 0x0400 + 1640) == 0 || timeOfDay != 5 || GET_SL_LEVEL(9) >= 10)
    {
        pageOneMask = pageOneMask + 8192;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        sayokoState = 0;
    }
    // Shu isn't available Monday, Wednesday, Friday, Sunday, Holidays and in the day
    if (BIT_CHK(0 + 0x0400 + 470) == 0 || BIT_CHK(0 + 0x0400 + 1638) == 0 || GET_SL_LEVEL(23) >= 10 || timeOfDay != 5)
    {
        pageOneMask = pageOneMask + 16384;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        shuState = 0;
    }
    // Yoskue isn't available Tuesday and Wednesday
    if (BIT_CHK(0 + 0x0400 + 454) == 0 || GET_SL_LEVEL(7) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 32768;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        yosukeState = 0;
    }
    // Yukiko isn't available Friday, Saturday and Sunday
    if (BIT_CHK(0 + 0x0400 + 452) == 0 || GET_SL_LEVEL(5) >= 10 || GET_SL_LEVEL(6) >= 10 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 65536;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        yukikoState = 0;
    }
    // Yumi isn't available Wednesday, Friday, Saturday, Sunday and Holiday
    if (BIT_CHK(0 + 0x0400 + 475) == 0 || GET_SL_LEVEL(25) >= 10 || GET_SL_LEVEL(26) >= 10 || GET_SL_LEVEL(28) > 0 || GET_SL_LEVEL(27) > 0 || timeOfDay == 5)
    {
        pageOneMask = pageOneMask + 131072;
        numSelectionsRemoved = numSelectionsRemoved + 1;
        yumiState = 0;
    }

    // Decide whether a second page is needed THIS WOULD BE SO MUCH EASIER WITH AN ARRAY AND A LOOP AHHHHH
    if (numSelectionsRemoved < 10)
    {
        // local58 is all characters removed (subtracting from this adds them back to the second list)
        // Yumi
        if (yumiState == 1)
        {
            // Remove from list 1
            pageOneMask = pageOneMask + 131072;
            // Add to list 2
            pageTwoMask = pageTwoMask - 131072;
            // Increment the count
            numSelectionsRemoved = numSelectionsRemoved + 1;
        }
        // Yukiko
        if (numSelectionsRemoved < 10) 
        {
            if (yukikoState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 65536;
                // Add to list 2
                pageTwoMask = pageTwoMask - 65536;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Yosuke
        if (numSelectionsRemoved < 10)
        {
            if (yosukeState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 32768;
                // Add to list 2
                pageTwoMask = pageTwoMask - 32768;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Shu
        if (numSelectionsRemoved < 10)
        {
            if (shuState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 16384;
                // Add to list 2
                pageTwoMask = pageTwoMask - 16384;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Sayoko
        if (numSelectionsRemoved < 10)
        {
            if (sayokoState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 8192;
                // Add to list 2
                pageTwoMask = pageTwoMask - 8192;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Rise
        if (numSelectionsRemoved < 10)
        {
            if (riseState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 4096;
                // Add to list 2
                pageTwoMask = pageTwoMask - 4096;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Naoto
        if (numSelectionsRemoved < 10)
        {
            if (naotoState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 2048;
                // Add to list 2
                pageTwoMask = pageTwoMask - 2048;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Naoki
        if (numSelectionsRemoved < 10)
        {
            if (naokiState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 1024;
                // Add to list 2
                pageTwoMask = pageTwoMask - 1024;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // Marie
        if (numSelectionsRemoved < 10)
        {
            if (marieState == 1)
            {
                // Remove from list 1
                pageOneMask = pageOneMask + 512;
                // Add to list 2
                pageTwoMask = pageTwoMask - 512;
                // Increment the count
                numSelectionsRemoved = numSelectionsRemoved + 1;
            }
        }
        // We don't need the see more option
    }
    else
    {
        pageOneMask = pageOneMask + 262144;
    }
}

void school_order_hook()
{
    int localVariable54 = 327;
    int localVariable55 = SCHOOL_SEL_HOOK;
    int localVariable57 = 0;

    if (GET_FIELD_MINOR() == 1)
    {
        localVariable57 = localVariable57 + 1;
    }
    else if (GET_FIELD_MINOR() == 2 || GET_FIELD_MINOR() == 6)
    {
        localVariable57 = localVariable57 + 2;
    }
    else if (GET_FIELD_MINOR() == 4 || GET_FIELD_MINOR() == 5)
    {
        localVariable57 = localVariable57 + 8;
    }
    else if (GET_FIELD_MINOR() == 3 || GET_FIELD_MINOR() == 14)
    {
        localVariable57 = localVariable57 + 4;
    }

    // Decide if hangout should not be displayed
    generate_selection_mask();
    if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
    {
        localVariable57 = localVariable57 + 32;
    }

    if (BIT_CHK(0 + 0x0400 + 0x0800 + 0) == 0)
    {
        localVariable57 = localVariable57 + 128;
    }

    SET_SEL_CHOICE_KEYBIND(14, 6);
    int localVariable56 = ADV_SEL(localVariable54, localVariable55, localVariable57);

    //Check if my custom menu was chosen

    if (localVariable56 == 5)
    {
        generate_hangout_menu();
    }
    else if (localVariable56 != 6)
    {
        FADE(1, 5);
        FADE_SYNC();

        if (localVariable56 == 0)
        {
            CALL_FIELD(6, 1, 1, 0);
        }
        else if (localVariable56 == 1)
        {
            CALL_FIELD(6, 2, 0, 0);
        }
        else if (localVariable56 == 2)
        {
            CALL_FIELD(6, 14, 0, 0);
        }
        else if (localVariable56 == 3)
        {
            CALL_FIELD(6, 4, 0, 0);
        }
        else if (localVariable56 == 4)
        {
            TOWN_MAP(0);
        }
        else if (localVariable56 == 7)
        {
            TV_STUDIO();
        }
    }
}

void check_if_holiday()
{
    // This is the logic lmap uses so it should be right
    if (DATE_CHK(4, 12) == 1 || GET_TIME_OF_DAY() == 3)
    {
        isHoliday = 1;
    }
    else
    {
        isHoliday = 0;
    }
}

void myhouse_order_hook()
{
    int localVariable58 = 327;
    int localVariable59 = MYHOME_SEL_HOOK;
    int localVariable61 = 0;

    if (GET_FIELD_MINOR() == 1)
    {

        if (GET_TIME_OF_DAY() == 5)
        {
            localVariable61 = localVariable61 + 1 + 2 + 4 + 8;
        }
        else
        {
            localVariable61 = localVariable61 + 1 + 2 + 8 + 0x10 + 0x20 + 0x40;
        }
    }
    else if (GET_FIELD_MINOR() == 2)
    {
        localVariable61 = localVariable61 + 1 + 4 + 0x10 + 0x20 + 0x40 + 0x80;
    }
    else if (GET_FIELD_MINOR() == 3)
    {
        localVariable61 = localVariable61 + 2 + 4 + 0x10 + 0x20 + 0x40 + 0x80;
    }

    if (BIT_CHK(0 + 0x0400 + 0x0800 + 0) == 0)
    {
        localVariable61 = localVariable61 + 1024;
    }

    // Decide if hangout should not be displayed
    generate_selection_mask();
    if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
    {
        localVariable61 = localVariable61 + 256;
    }

    SET_SEL_CHOICE_KEYBIND(14, 9);
    int localVariable60 = ADV_SEL(localVariable58, localVariable59, localVariable61);

    if (localVariable60 == 0)
    {
        PLAY_SOUNDEFFECT(173);
        FADE(1, 5);
        FADE_SYNC();
        CALL_FIELD(7, 2, 1, 0);
        return;
    }
    else if (localVariable60 == 1)
    {
        into_myroom();
        return;
    }
    else if (localVariable60 == 2)
    {
        FADE(1, 5);
        FADE_SYNC();
        TOWN_MAP(5);
        return;
    }
    else if (localVariable60 == 3)
    {
        getout_myhome();
        return;
    }
    else if (localVariable60 == 4)
    {
        FADE(1, 5);
        FADE_SYNC();
        CALL_FIELD(8, 2, 0, 0);
        return;
    }
    else if (localVariable60 == 5)
    {
        call_go2shrine();
        return;
    }
    else if (localVariable60 == 6)
    {
        call_go2beach();
        return;
    }
    else if (localVariable60 == 7)
    {
        entrance_into_myhome();
        return;
    }
    else if (localVariable60 == 10)
    {
        FADE(1, 5);
        FADE_SYNC();
        TV_STUDIO();
        return;
    }
    // My custom option was chosen
    else if (localVariable60 == 8)
    {
        generate_hangout_menu();
        return;
    }
}

void street_order_hook()
{
    int localVariable62 = 0;
    int localVariable63 = 0;
    int localVariable65 = 0;
    int localVariable64 = 0;

    if (GET_TIME_OF_DAY() == 5)
    {
        localVariable62 = 327;
        localVariable63 = SEL_NIGHT_PLACE_HOOK;
        localVariable65 = 0;
        sel_mask_night_play();
        localVariable65 = variable136;

        // Decide if hangout should not be displayed
        generate_selection_mask();
        if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
        {
            localVariable65 = localVariable65 + 64;
        }

        SET_SEL_CHOICE_KEYBIND(14, 7);
        localVariable64 = ADV_SEL(localVariable62, localVariable63, localVariable65);

        if (localVariable64 == 0)
        {
            call_go2street();
        }
        else if (localVariable64 == 1)
        {

            if (GET_FIELD_MINOR() == 2 || GET_FIELD_MINOR() == 13)
            {
                call_street_02();
            }
            else if (GET_FIELD_MINOR() == 9 || GET_FIELD_MINOR() == 14)
            {
                call_shrine2street();
            }
        }
        else if (localVariable64 == 2)
        {
            call_street_01();
        }
        else if (localVariable64 == 3)
        {
            call_street2shrine();
        }
        else if (localVariable64 == 4)
        {
            call_go2beach();
        }
        else if (localVariable64 == 5)
        {
            call_go2home();
        }
        // My custom option was chosen
        else if (localVariable64 == 6)
        {
            generate_hangout_menu();
        }
        return;
    }
    else
    {
        localVariable62 = 327;
        localVariable63 = STREET_SEL_HOOK;
        localVariable65 = 0;

        if (GET_FIELD_MINOR() == 1 || GET_FIELD_MINOR() == 12)
        {
            localVariable65 = localVariable65 + 1;
        }
        else if (GET_FIELD_MINOR() == 2 || GET_FIELD_MINOR() == 13)
        {
            localVariable65 = localVariable65 + 2;

            if (DATE_CHK(4, 11))
            {
                localVariable65 = localVariable65 + 1 + 4;
            }
        }
        else if (GET_FIELD_MINOR() == 9 || GET_FIELD_MINOR() == 14)
        {
            localVariable65 = localVariable65 + 4;
        }

        // Decide if hangout should not be displayed
        generate_selection_mask();
        if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
        {
            localVariable65 = localVariable65 + 16;
        }

        SET_SEL_CHOICE_KEYBIND(14, 5);
        localVariable64 = ADV_SEL(localVariable62, localVariable63, localVariable65);

        if (localVariable64 != 5)
        {

            if (localVariable64 == 0)
            {

                if (GET_FIELD_MINOR() == 2 || GET_FIELD_MINOR() == 13)
                {
                    call_street_02();
                }
                else if (GET_FIELD_MINOR() == 9 || GET_FIELD_MINOR() == 14)
                {
                    call_shrine2street();
                }

                return;
            }
            else if (localVariable64 == 1)
            {
                call_street_01();
                return;
            }
            else if (localVariable64 == 2)
            {
                call_street2shrine();
                return;
            }
            else if (localVariable64 == 3)
            {

                if (DATE_CHK(4, 11) == 1)
                {
                    OPEN_MSG_WIN();
                    MSG(343);
                    CLOSE_MSG_WIN();
                }
                else if (GET_MONTH() == 4 && GET_DAY_OF_MONTH() == 17)
                {
                    OPEN_MSG_WIN();
                    MSG(341);
                    SET_SEL_CHOICE_KEYBIND(14, 1);
                    localVariable64 = SEL(1);
                    CLOSE_MSG_WIN();

                    if (localVariable64 == 0)
                    {
                        FADE(1, 10);
                        FADE_SYNC();
                        eve_0417_afterschool();
                    }
                }
                else
                {
                    FADE(1, 5);
                    FADE_SYNC();
                    TOWN_MAP(1);
                }

                return;
            }
            // My custom option was chosen
            else if (localVariable64 == 4)
            {
                generate_hangout_menu();
                return;
            }
        }

        return;
    }
}

// A direct copy of the original function (it doesn't work unless I do this for some reason, maybe because of variable136)
void sel_mask_night_play_hook()
{
    int localVariable139 = 0;
    variable136 = 0;

    if (GET_FIELD_MAJOR() == 8)
    {
        localVariable139 = localVariable139 + 1;

        if (GET_FIELD_MINOR() == 1 || GET_FIELD_MINOR() == 12)
        {
            localVariable139 = localVariable139 + 2;

            if (BIT_CHK(0 + 0x0400 + 0x0800 + 178) == 1)
            {
                localVariable139 = localVariable139 + 4 + 8;
            }
        }
        else if (GET_FIELD_MINOR() == 2 || GET_FIELD_MINOR() == 13)
        {
            localVariable139 = localVariable139 + 4;

            if (BIT_CHK(0 + 0x0400 + 0x0800 + 178) == 1)
            {
                localVariable139 = localVariable139 + 2 + 8;
            }
        }
        else if (GET_FIELD_MINOR() == 9 || GET_FIELD_MINOR() == 14)
        {
            localVariable139 = localVariable139 + 8;
        }
    }
    else if (GET_FIELD_MAJOR() == 10)
    {
        localVariable139 = localVariable139 + 2 + 4 + 8 + 0x10;
    }

    BIT_OFF(0 + 0x0400 + 0x0800 + 178);
    variable136 = localVariable139;
}

void gms_order_hook()
{
    int localVariable66 = 327;
    int localVariable67 = GMS_SEL_HOOK;
    int localVariable69 = 0;

    // Decide if hangout should not be displayed
    generate_selection_mask();
    if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
    {
        localVariable69 = localVariable69 + 4;
    }

    SET_SEL_CHOICE_KEYBIND(14, 3);
    int localVariable68 = ADV_SEL(localVariable66, localVariable67, localVariable69);

    if (localVariable68 != 3)
    {

        if (localVariable68 == 0)
        {
            BIT_OFF(0 + 0x0400 + 0x0800 + 185);
            elevator_to_foodcourt();
            return;
        }
        else if (localVariable68 == 1)
        {
            FADE(1, 5);
            FADE_SYNC();
            TOWN_MAP(2);
            return;
        }
        // My custom option was chosen
        else
        {
            generate_hangout_menu();
            return;
        }
    }
}

void embank_order_hook()
{
    int localVariable70 = 0;
    int localVariable71 = 0;
    int localVariable73 = 0;
    int localVariable72 = 0;

    if (GET_TIME_OF_DAY() == 5)
    {
        localVariable70 = 327;
        localVariable71 = SEL_EMBANK_NIGHT_HOOK;
        localVariable73 = 0;

        // Decide if hangout should not be displayed
        generate_selection_mask();
        if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
        {
            localVariable73 = localVariable73 + 8;
        }

        SET_SEL_CHOICE_KEYBIND(14, 4);
        localVariable72 = ADV_SEL(localVariable70, localVariable71, localVariable73);

        if (localVariable72 == 0)
        {
            call_go2street();
        }
        else if (localVariable72 == 1)
        {
            call_go2shrine();
        }
        else if (localVariable72 == 2)
        {
            call_go2home();
        }
        // My custom option was chosen
        else if (localVariable72 == 3)
        {
            generate_hangout_menu();
        }
        return;
    }
    else
    {
        localVariable70 = 327;
        localVariable71 = SEL_EMBANK_HOOK;
        localVariable73 = 0;

        if (GET_FIELD_MINOR() == 1)
        {
            localVariable73 = localVariable73 + 1;
        }
        else if (GET_FIELD_MINOR() == 2)
        {
            localVariable73 = localVariable73 + 2;
        }

        // Decide if hangout should not be displayed
        generate_selection_mask();
        if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
        {
            localVariable73 = localVariable73 + 8;
        }

        SET_SEL_CHOICE_KEYBIND(14, 4);
        localVariable72 = ADV_SEL(localVariable70, localVariable71, localVariable73);

        if (localVariable72 != 4)
        {

            if (localVariable72 == 0)
            {
                FADE(1, 5);
                FADE_SYNC();
                CALL_FIELD(10, 1, 1, 0);
                return;
            }
            else if (localVariable72 == 1)
            {
                FADE(1, 5);
                FADE_SYNC();
                CALL_FIELD(10, 2, 0, 0);
                return;
            }
            else if (localVariable72 == 2)
            {
                FADE(1, 5);
                FADE_SYNC();
                TOWN_MAP(3);
                return;
            }
            // My custom option was chosen
            else
            {
                generate_hangout_menu();
                return;
            }
        }
    }
}

void station_order_hook()
{
    int localVariable74 = 327;
    int localVariable75 = STATION_SEL_HOOK;
    int localVariable77 = 0;
    int localVariable76 = 0;

    if (BIT_CHK(0 + 0x0400 + 0x0800 + 336) == 1)
    {
        OPEN_MSG_WIN();
        MSG(342);
        CLOSE_MSG_WIN();
    }
    else
    {
        // Decide if hangout should not be displayed
        generate_selection_mask();
        if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
        {
            localVariable77 = localVariable77 + 2;
        }

        SET_SEL_CHOICE_KEYBIND(14, 2);
        localVariable76 = ADV_SEL(localVariable74, localVariable75, localVariable77);

        if (localVariable76 == 0)
        {
            BIT_ON(0 + 0x0400 + 0x0800 + 172);
            BIT_OFF(0 + 0x0400 + 0x0800 + 171);
            FADE(1, 5);
            FADE_SYNC();

            if (GET_CNT(169) != 0)
            {

                if (DATE_CHK(3, 20) == 1)
                {
                    SET_CNT(169, 0);
                    FUNCTION_006B(-1);
                    FUNCTION_006B(1);
                }
                else
                {
                    SET_CNT(169, 0);
                    FUNCTION_006B(-1);
                }
            }

            if (BIT_CHK(0 + 0x0400 + 0x0800 + 176) == 1)
            {
                CALL_FIELD(7, 1, 5, 0);
            }
            else
            {
                BIT_OFF(0 + 0x0400 + 0x0800 + 172);
                TOWN_MAP(6);
            }
        }
        // My custom option was chosen
        else if (localVariable76 == 1)
        {
            generate_hangout_menu();
        }
    }
}

void schoolroad_order_hook()
{
    int localVariable78 = 327;
    int localVariable79 = SCHOOLROAD_SEL_HOOK;
    int localVariable81 = 0;

    // Decide if hangout should not be displayed
    generate_selection_mask();
    if (numSelectionsRemoved == 18 || (BIT_CHK( 0 + 0x0400 + 0x0800 + 2 ) || BIT_CHK( 0 + 0x0400 + 1726 ) && GET_TIME_OF_DAY() == 5))
    {
        localVariable81 = localVariable81 + 2;
    }

    SET_SEL_CHOICE_KEYBIND(14, 2);
    int localVariable80 = ADV_SEL(localVariable78, localVariable79, localVariable81);

    if (localVariable80 == 0)
    {
        FADE(1, 5);
        FADE_SYNC();
        TOWN_MAP(4);
        return;
    }
    // My custom option was chosen
    else if (localVariable80 == 1)
    {
        generate_hangout_menu();
        return;
    }
}